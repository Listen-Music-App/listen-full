services:
  auth:
    build:
      context: .
      dockerfile: listen_auth/dockerfile

    environment:
      - HOST=0.0.0.0
      - PORT=3000
      - API_SECRET_KEY=some-secret-key

    env_file:
      - host.env

    command: bash -c " python app/manage.py migrate && python app/manage.py runserver "
    ports:
      - "3000:3000"
    
  api:
    build:
      context: .
      dockerfile: listen_api/dockerfile

    environment:
      - HOST=0.0.0.0
      - PORT=5000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=listendb
      - DB_USER=owner
      - DB_PASSWORD=password
      - AUTH_SERVER=http://auth:3000/auth/
      - API_SECRETE_KEY=some-secret-key
    
    env_file:
      - host.env

    command: bash -c " python app/manage.py migrate && python app/manage.py runserver "
    ports:
      - "5000:5000"

    depends_on:
      - db
      - auth
    
    restart: always
    
  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=owner
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=listendb
    ports:
      - "5432:5432"

  listen_gateway:
    build: 
      context: .
      dockerfile: listen_gateway/dockerfile
    environment:
      - AUTH_HOST=auth
      - AUTH_PORT=3000
      - API_HOST=api
      - API_PORT=5000
    
    env_file:
      - host.env

    links:
      - auth
      - api

    ports:
      - "80:80"

    depends_on:
      - auth
      - api